#BlueJ class context
comment0.target=Student
comment0.text=\r\n\ Description\ \=>\ creamos\ la\ clase\ Student\ para\ instanciar\ un\ objeto\ de\ la\ clase\ Student.\r\n\ Tener\ en\ cuenta\ que\ no\ solo\ se\ no\ sva\ a\ pedir\ el\ nombre\ de\ la\ instancia\ sino\ algunos\r\n\ parametros.\r\n\ Los\ parametros\ se\ tienen\ que\ rellenar\ antes\ de\ hacer\ click\ en\ OK\r\n\ ***PARAMETROS\ DE\ TIPO\ String\ --->\ se\ tienen\ que\ escribir\ entre\ dobles\ comillas\r\n\ \r\n\ @author\ Sergio\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Student()
comment2.params=nombre\ apellido\ DNI\ creditos
comment2.target=Student(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Como\ podemos\ observar\ devuelve\ un\ resultado\ en\ nuestro\ caso\ \r\n\ ,concretamente,\ nos\ devuelve\ un\ resultado\ de\ tipo\ String.\r\n\ \ \r\n\ \ -->\ Esto\ lo\ podemos\ saber\ gracias\ a\ que\ vemos\ en\ la\ cabecera\r\n\ \ \ \ \ \ que\ el\ retorno\ es\ String.\r\n
comment4.params=replacementName
comment4.target=void\ changeName(java.lang.String)
comment4.text=\r\n\ Los\ m\u00E9todos\ con\ valores\ de\ retorno\ nos\ permiten\ obtener\ informaci\u00F3n\ de\ un\ objeto\r\n\ mediante\ la\ invocaci\u00F3n\ de\ un\ m\u00E9todO.\r\n\ \ \r\n\ \ -->\ Esto\ significa\ que\ podems\ emplear\ m\u00E9todos\ para\ cambiar\ el\ estado\ de\ un\ objeto\r\n\ \ \ \ \ \ o\ para\ averiguar\ cu\u00E1l\ es\ el\ estado.\r\n
comment5.params=
comment5.target=java.lang.String\ getStudentID()
comment6.params=
comment6.target=int\ getStudentCredits()
comment7.params=addCredits
comment7.target=void\ addCredits(int)
comment8.params=
comment8.target=void\ print()
numComments=9
